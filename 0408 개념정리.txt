Arduino board <--> pc와 자료교환

Arduino board ->pc자료 전송

arduino ide: integrated development environment
코드작성, 컴파일, 업로드, 수정
툴바메뉴
왼쪽부터 체크: 컴파일
화살표: 업로드, 아두이노 보드에 작성한 코드를 컴파일 후 기계어 코드로 기록

오른쪽 끝 돋보기: 시리얼 모니터, pc에 연결된 아두이노 보드와 자료교환
시리얼 모니터 창 우측 아랫부분에 9600이라는 값이 표시되어 있음

서로 다른 두 장치 사이에 연결 설정: 주고받는 데이터의 속도
 9600 baudrate: 1초 동안 전송된 기호의 수(물리적인 전기신호)
	주로 하드웨어를 사용하는 분야에서 전송속도를 표현할 때 baudrate
 9600 bps: bit per second 1초동안 전송한 데이터의 수
	소프트웨어 다루는 분야에서 정보의 양을 기준으로 표시
아두이노 보드에서 사용하는 통신 방식은 UART, baudrate와 bps 동일

통신의 기본
 두 장치 사이의 데이터 전송 속도 설정
Serial.begin(9600);
시리얼(직렬) 통신 장치의 사용 시작을 지시. 속도는 9600 baudrate로 설정
s는 대문자, 나머지는 소문자. 


Serial.print(...);
 Serial.print("내가 하고싶은 말은...");
"" 문자열을 기록할 경우 그대로 화면에 표시됨.

실제 전송은 한순간에 한글자(영문 기준)만 전송됨. 1byte(8bit)
한글의 경우 두글자(영문기준)
가급적 영문으로 표현.

Serial.println() print와 동일하나 출력 후 커서를 다음줄 첫째칸으로 이동시킴 
-> 출력 후 엔터키 입력한 것과 동일한 효과를 나타냄. 줄바꿈.

Serial.print로 출력되는 값은 숫자가 아니라 문자임.
Serial.print(변수)의 경우 변수에 해당하는 값을 print에서 알아서 화면에 출력가능한 문자로 변환하여
서식을 변경한 후 전송함

68 숫자 -> 문자 6과 문자 8로 변환한 후 전송
Serial.println(68,BIN); //2진수로 변환해서 출력
1000100  -> 문자 1과 문자 0로 변환한 후 전송

Serial.write(값); 값은 0-255 사이의 숫자
값에 대응하는 ASCII Code가 화면에 출력
1-Byte에 해당하는 값을 전송하고, 
화면에는 이에 대응하는 ASCII Code의 문자가 표시됨

Arduino 보드와 같이 모니터가 없는 장치의 경우
동작상태를 개발자가 확인할 수 있는 수단이 없으므로
pc와 연결 한 후 통신 장치를 사용하여
알고싶은 변수난 상태 등을 pc로 전송한 후 시리얼 모니터에
표시하여 확인하는 수단으로 활용.

툴메뉴의 시리얼 플로터를 사용하면 그래프로 그릴 수 있음
단, 이때는 serial.println을 사용해야함

*결론
void setup() {
 
  Serial.begin(속도);
  
}
속도: 연결하려는 상대측 기기에서 사용 가능한 속도(일반적으로 9600)

void loop()
{
	Serial.println(전송데이터);
	delay(시간 지연);
}

아두이노의 loop은 16MHz로 동작
1/16000000초마다 기계어 명령어 1개씩 실행.
상대측 기계가 데이터를 충분히 받을 수 있을 때까지 대기한 후 다음 데이터 전송 delay(시간지연);

---------------------------------

Analog 신호를 읽어 디지털 값으로 변환
->센서를 사용해서 주변의 물리량을 측정.
  측정된 값이 얼마나 존재하는지를 판단

analogRead(아날로그 입력핀);

아날로그 입력핀 :A0,A1,...,A4,A5
값을 저장할 공간 = 아날로그값 읽음(핀번호);

sensor_value=analogRead(A0);
	0V~ +5V(전압)

A0핀의 현재 상태를 0-1023 사이의 값으로 환산하여 sensor_value에 저장

센서: 측정 대상의 물리량에 대해 전기적 신호로 변환하여 나타내는 장치를 의미함
존재하는 대상이 0%일 때 0V를 출력하고 100%일 때 5V를 출력함.

analogRead(A0)
0-1023

analogWrite(핀번호, 값)
값:0-255

1023:255=512(read에서 측정된 아날로그값):?(write돼야할 값) 해서 ?를 구함

플레이엔트리 이용해서 아두이노 만들면 도움 받을 수 있음.